name: ecs-deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up AWS credentials
        run: |
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
      
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t my-app .
      
      - name: Tag Docker image
        run: |
          echo "ECR Registry: ${{ secrets.AWS_ECR_REGISTRY }}"
          docker tag my-app:latest 317327656978.dkr.ecr.us-east-1.amazonaws.com/ecs-ecr-repo:latest
      
      - name: Push Docker image to Amazon ECR
        run: |
          echo "ECR Registry: ${{ secrets.AWS_ECR_REGISTRY }}"
          docker push 317327656978.dkr.ecr.us-east-1.amazonaws.com/ecs-ecr-repo:latest
      
      - name: Update ECS Task Definition
        id: update-task-definition
        run: |
          task_definition=$(aws ecs register-task-definition --cli-input-json file://task-def.json)
          echo "::set-output name=task-definition-arn::$(echo $task_definition | jq -r '.taskDefinition.taskDefinitionArn')"
      
      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster TestCluster --service s3-service --task-definition ${{ steps.update-task-definition.outputs.task-definition-arn }}
